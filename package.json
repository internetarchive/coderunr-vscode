{
	"name": "coderunr-vscode",
	"displayName": "CodeRunr",
	"description": "Runs configured CI/CD commands when a file is saved in vscode, and output configured messages on status bar.",
	"icon": "images/logo.png",
	"version": "1.6.2",
	"license": "MIT",
	"publisher": "internetarchive",
	"homepage": "https://github.com/internetarchive/coderunr-vscode",
	"repository": {
		"type": "git",
		"url": "https://github.com/internetarchive/coderunr-vscode"
	},
	"bugs": {
		"url": "https://github.com/internetarchive/coderunr-vscode/issues"
	},
	"engines": {
		"vscode": "^1.30.0"
	},
	"categories": [
		"Other"
	],
	"keywords": [
		"CodeRunr",
		"continuous deployment",
		"CI/CD on save"
	],
	"activationEvents": [
		"*"
	],
	"main": "./out/extension.js",
	"contributes": {
		"commands": [
			{
				"command": "extension.enableCodeRunr",
				"title": "CodeRunr: Enable"
			},
			{
				"command": "extension.disableCodeRunr",
				"title": "CodeRunr: Disable"
			}
		],
		"configuration": {
			"title": "CodeRunr",
			"type": "object",
			"properties": {
				"CodeRunr.server": {
					"type": "string",
					"description": "server hostname to `ssh` into that is running coderunr docker image.  See https://coderunr.com/",
					"default": "example.com"
				},
				"CodeRunr.match": {
					"type": "string",
					"description": "Specify a RegExp source to match file path.",
					"default": "/dev/"
				},
				"CodeRunr.statusMessageTimeout": {
					"type": "number",
					"description": "Sepcify the timeout in millisecond after which the status message will be hidden. Works when `runIn=backend`, can be overwriten by the `statusMessageTimeout` in each command.",
					"default": 600000
				},
				"CodeRunr.shell": {
					"type": "string",
					"description": "Specify what shell will be used for all the commands. Default is vscode's default shell.",
					"default": null
				},
				"CodeRunr.commands": {
					"type": "array",
					"description": "Shell commands array.",
					"default": [{
						"match": "${config:CodeRunr.match}",
						"command": "cd '${workspaceFolder}'  &&  export CLONE=$(git config --get remote.origin.url)  BRANCH=$(git rev-parse --abbrev-ref HEAD)  && cat '${file}' | ssh ${config:CodeRunr.server} 'export INCOMING=$(mktemp) CLONE='$CLONE' BRANCH='$BRANCH' \"FILE=${fileRelative}\"  &&  cat >| $INCOMING  &&  /coderunr/deploy.sh'  &&  echo SUCCESS",
						"runIn": "backend",
						"runningStatusMessage": "ðŸ”ºðŸ”ºðŸ”º SAVING ðŸ”ºðŸ”ºðŸ”º",
						"finishStatusMessage": "Saved âœ…",
						"async": false
					}],
					"items": {
						"type": "object",
						"properties": {
							"match": {
								"type": "string",
								"description": "Specify a RegExp source to match file path. Note if specifies both `match` and `globMatch`, commands matched them both will be executed.",
								"default": ""
							},
							"notMatch": {
								"type": "string",
								"description": "Specify a RegExp source, the files whole path match it will be excluded.",
								"default": ""
							},
							"globMatch": {
								"type": "string",
								"description": "Specify a glob expression to match file path. reference to: https://github.com/isaacs/node-glob#glob-primer. Note if specifies both `match` and `globMatch`, only commands matched them both will be executed.",
								"default": ""
							},
							"commandBeforeSaving": {
								"type": "string",
								"description": "Specify the command to be executed before saving the file. Note that for backend command, file will be saved after command executed completed.",
								"default": "echo ${file}"
							},
							"command": {
								"type": "string",
								"description": "Specify the command to be executed after file saved.",
								"default": "echo ${file}"
							},
							"runIn": {
								"type": "string",
								"description": "Run command in.",
								"enum": [
									"backend",
									"terminal",
									"vscode"
								],
								"default": "backend",
								"enumDescriptions": [
									"Run command silently and output messages to output channel, you can specify `runningStatusMessage` and `finishStatusMessage` to give you feekback. Choose this when you don't want to be disturbed.",
									"Run command in vscode terminal, which keeps message colors. Choose this when you want to get command feedback details.",
									"Run vscode's command. Choose this if you want to execute vscode's own command or a command from a installed vscode extension."
								]
							},
							"async":{
								"type": "boolean",
								"description": "All the commands with `async: false` will run in a sequence, means run next after previous completed. Default value is `true`.",
								"default": true
							},
							"runningStatusMessage": {
								"type": "string",
								"description": "Specify the status bar message when the shell command began to run. Only works when `runIn=backend`.",
								"default": "ðŸ”ºðŸ”ºðŸ”º SAVING ðŸ”ºðŸ”ºðŸ”º"
							},
							"finishStatusMessage": {
								"type": "string",
								"description": "Specify the status bar message after the shell command finished executing. Only works when `runIn=backend`.",
								"default": "Saved âœ…"
							},
							"statusMessageTimeout": {
								"type": "number",
								"description": "Sepcify the timeout in millisecond after which the status message will hide. Only works when `runIn=backend`.",
								"default": 3000
							},
							"workingDirectoryAsCWD": {
								"type": "boolean",
								"description": "Specify the vscode working directory as shell CWD (Current Working Directory). Only works when `runIn=backend`.",
								"default": true
							}
						}
					}
				}
			}
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run build",
		"build": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"postinstall": "node ./node_modules/vscode/bin/install",
		"test": "npm run build && node ./node_modules/vscode/bin/test"
	},
	"devDependencies": {
		"@types/minimatch": "^3.0.4",
		"@types/mocha": "^2.2.48",
		"@types/node": "^8.10.62",
		"typescript": "^3.9.5",
		"vscode": "^1.1.37"
	},
	"dependencies": {
		"minimatch": "^3.0.4"
	}
}